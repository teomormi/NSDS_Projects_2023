akka {
  log-dead-letters-during-shutdown = off
  log-dead-letters = off
  actor {
    provider = "cluster"
    serializers {
          jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    serialization-bindings{
        "com.message.Config" = jackson-json
        "com.message.CreatePipeline" = jackson-json
        "com.message.KeyValueMessage" = jackson-json
        "com.message.ReturnPipeline" = jackson-json
        "com.message.StartPipeline" = jackson-json
        "com.message.KillActor" = jackson-json
    }
  }
  # Remoting is the mechanism by which Actors on different nodes talk to each other internally.
  remote.artery {
    canonical {
      hostname = "127.0.0.1"  # Host name is exactly what is passed to remote systems in order to identify this system (client/server IPs)
      port = 2551 # 0 to be random
    }
  }
  # Cluster is the mechanism to allow nodes to communicate
  cluster {
    seed-nodes = [
      "akka://System@127.0.0.1:2551" # server IP
     ]

    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
}